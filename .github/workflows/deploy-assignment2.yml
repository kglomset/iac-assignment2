name: Deploy to Environment

# Controls when the workflow will run
on:
  push:
    branches:
      - dev
      - staging
      - prod

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PWD }}
  VMSS_PASSWORD: ${{ secrets.VMSS_PWD }}
  VMSS_USERNAME: ${{ secrets.VMSS_USERNAME }}
  WORKING_DIR: ./deployments


jobs:
  deploy-dev:
    if: ${{ github.ref == 'refs/heads/dev' }}
    runs-on: ubuntu-latest
    name: Deploy to Dev
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Login to Azure CLI using service principal.
      - name: Azure CLI Login
        run: |
          az login --service-principal --username ${{ env.ARM_CLIENT_ID }} --password=${{ env.ARM_CLIENT_SECRET }} --tenant ${{ env.ARM_TENANT_ID }}

      - name: Terraform init for Dev
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Select or create Dev workspace
        run: terraform workspace select dev || terraform workspace new dev
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform apply for Dev
        run: |
            terraform apply -auto-approve \
            -var-file="terraform.dev.tfvars" \
            -var "vmss_admin_password=${VMSS_PASSWORD}"
            -var "vmss_admin_username=${VMSS_USERNAME}"
            -var "server_admin_pwd=${DB_PASSWORD}"
            -var "server_admin_username=${DB_USERNAME}"
        working-directory: ${{ env.WORKING_DIR }}

  deploy-staging:
    if: ${{ github.ref == 'refs/heads/staging' }}
    runs-on: ubuntu-latest
    name: Deploy to Staging

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Login to Azure CLI using service principal.
      - name: Azure CLI Login
        run: |
          az login --service-principal --username ${{ env.ARM_CLIENT_ID }} --password=${{ env.ARM_CLIENT_SECRET }} --tenant ${{ env.ARM_TENANT_ID }}
      - name: Terraform init for Staging
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Select or create Staging workspace
        run: terraform workspace select staging || terraform workspace new staging
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform apply for Staging
        run: |
            terraform apply -auto-approve \
            -var-file="terraform.staging.tfvars" \
            -var "vmss_admin_password=${VMSS_PASSWORD}"
            -var "vmss_admin_username=${VMSS_USERNAME}"
            -var "server_admin_pwd=${DB_PASSWORD}"
            -var "server_admin_username=${DB_USERNAME}"
        working-directory: ${{ env.WORKING_DIR }}

  deploy-prod:
    if: ${{ github.ref == 'refs/heads/prod' }}
    runs-on: ubuntu-latest
    environment:
      name: production
    name: Deploy to Production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Login to Azure CLI using service principal.
      - name: Azure CLI Login
        run: |
          az login --service-principal --username ${{ env.ARM_CLIENT_ID }} --password=${{ env.ARM_CLIENT_SECRET }} --tenant ${{ env.ARM_TENANT_ID }}
      - name: Terraform init for Production
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Select or create Production workspace
        run: terraform workspace select prod || terraform workspace new prod
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform apply for Production
        run: |
            terraform apply -auto-approve \
            -var-file="terraform.prod.tfvars" \
            -var "vmss_admin_password=${VMSS_PASSWORD}"
            -var "vmss_admin_username=${VMSS_USERNAME}"
            -var "server_admin_pwd=${DB_PASSWORD}"
            -var "server_admin_username=${DB_USERNAME}"
        working-directory: ${{ env.WORKING_DIR }}
